I've attached a version with an inspector. Currently, it's a quick hack, but you will probably get the idea: The camera driver class (model layer) may specify the name of an inspector controller class (via the "CameraFeature" thing).

The inspector has to be subclass of "MyCameraInspector" (the base class does the generic inspector). MyController (controller of the main window) can instantiate the class, and assign the inspector's view to a window. Creation and disposal of the window is handled by MyController, the interaction in the view is controlled by your InspectorConroller (I would have preferred of having them completely separated, but then, the InspectorController would have to provide a NSWindow. Providing an NSView is probably more versatile because it can be incorporated into panes, subviews and whatever).

The default Inspector controller loads a nib file (with itself as the owner) and displays the camera name. I thought you might be interested in this preliminary implementation so we can change things if you think that this is no good idea.

$Id: inspector.txt,v 1.2 2002/05/27 05:43:38 dirkx Exp $
